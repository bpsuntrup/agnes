/api/v1/...
The api will be built around the following resources:
/users
/messages
/spaces
/attachments

want to 
* crud a message
* crud a user
* crud a space
* crd an attachment

GET /spaces
* lists all spaces (you can see, public and private)
* filter with query params

GET /messages
* lists all messages you can see in reverse chronological order, paged
* filter for public or private

GET /spaces/<space-id>/messages
* get messages only for a given space

POST /spaces/<space-id>/messages
* send a message

GET /users
* paginated list of users

GET /users?query="..."
GET /users/<user-id>
GET /users/<user-id>/messages
GET /space/<space-id>/users
PUT /messages/<message-id>
* for editing a message

POST /messages/<message-id>/reactions
* adding a reaction

GET/POST/DELETE /attachments/<attachment_id>
* no method for listing all attachments
* controlled by session cookie and permissions in attachments table (and attachment_owner_spaces)
* only the owner can delete
* only owner or spaces can see
* served via fs on back end. Must be hardened to fs walking attacks. Check permissions before serving file.

POST /reports
* creates a report for a message or a conversation or something
